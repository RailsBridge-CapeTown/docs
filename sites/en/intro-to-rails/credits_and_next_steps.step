message <<MARKDOWN
# Congratulations!
### You've just completed your first Rails app.

(Well, they're never _really_ finished... have fun tweaking it!)
And yes... **you get another sticker**!

If you'd like to try your hand at more coding and add useful features to your app, have a look at the extra credit section below.

MARKDOWN


tip "Hey, buddy!" do

  message "Grab an index card and a pen. Write a [SMART](http://en.wikipedia.org/wiki/SMART_criteria) goal for yourself. It should be something kinda small and kinda soon: **S**pecific, **M**easurable, **A**ssignable, **R**ealistic, **T**ime-related."

  message "Pass the card to someone at the workshop (your new buddy!), and ask them to write **their email address** and **their SMART goal** on the other side of your card."  

  message "Take your card back and promise each other to keep in contact until you've both achieved your SMART goal."

  message "Celebrate with a high five ^5 !"

end


message <<MARKDOWN

# Help us make RailsBridge better

Please take five minutes to [complete our (anonymous) survey](http://rbcpt.org/exitsurvey/).

It's only four questions! We use your answers to do cool things. So far we've improved the documentation, got better coffee, added an overview, and lots more. **You will get yet another sticker :)**.

Thank you!

MARKDOWN


message <<MARKDOWN

# Extra Credit

If you got all the way through Suggestotron with some time to spare, here's some extra stuff you can try. Don't hesitate to ask a teacher for hints or explanations.

To get some ideas have a look at the stuff you did this morning with `irb`, and try Googling things like 'Rails sort order'.

### Downvote button

Users should be able to give a post a negative vote (_downvote_) instead of a positive one (_upvote_). How might you represent that in this system? Add a downvote button that does the opposite of what the current upvote button does.

### Sort topics

Sort topics by their number of votes, in descending order.

MARKDOWN

tip do
  message "You will want to modify the index method in `app/controllers/topics_controller.rb` so that `@topics` contains a sorted list of topics."
  message "Have a look at the line in the index method:"
  source_code :ruby, <<-RUBY
  @topics = Topic.all
  RUBY
  message "It might change to something like this:"
  source_code :ruby, <<-RUBY
  @topics = Topic.sorted
  RUBY
  message "How can you add a `sorted` method to the topic model? What code do you need to put in this method to sort the topics?"
end

message <<MARKDOWN

### About page

Add an 'About' page, linked from the bottom of the Suggestotron topics list. Link back to the Topics list from the About page so users don't get stranded.

### One vote per user (if your class has a **lot** of time left over)

Users should be allowed to vote only once: give votes a `user_id` field and allow a user to vote on each topic only once. But wait... what is a _user_ in our system? Get a volunteer to introduce everyone to [Devise](https://github.com/plataformatec/devise), a simple way to add authentication to a Rails application.

### It's Broken! Fix it!

How about you let your teacher break the app you just wrote? We guess you are asking yourself \"why would I do that?\".
Well, **debugging** is a big part of every developer's day.

**Debugging** is the process where you find the problem that causes your application to misbehave or to stop working altogether.
This is a special skill that you will develop throughout your programming career and is hardly ever learnt from a book. It
takes time, patience, and hard work to improve your debugging skill.

The exercises below will give you a sneak peek of how the debugging process is usually done. Call a teacher and let\'s take a look at three fragile points of every Rails application:
MARKDOWN
ol do
  li "Attributes in the attr_accessible collection"
  li "Routes"
  li "Bugs that cause unwanted behaviour, but don\'t cause the app to crash "
end


h1 "Authors"

ul do
  li "Sarah Allen"
  li "Sarah Mei"
  li "Alex Chaffee"
  li "Ryan Davis"
  li "Steven! Ragnarok"
  li "...and many, many others"
end

h1 "What next?"

message <<MARKDOWN

Whatever you want! You could learn some more Ruby, or some more Rails. You could learn a new language (like JavaScript or Python). You could job shadow or intern somewhere.

We've collected a bunch of useful links on the [Resources page](http://docs.railsbridgecapetown.org/workshop/resources).

MARKDOWN
